<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevAge.SourceGrid3.Extensions</name>
    </assembly>
    <members>
        <member name="T:SourceGrid3.ArrayGrid">
            <summary>
            This class derive from GridVirtual and create a grid binded to an array.
            </summary>
        </member>
        <member name="P:SourceGrid3.ArrayGrid.DataSource">
            <summary>
            Gets or sets the data source array used to bind the grid.
            </summary>
        </member>
        <member name="P:SourceGrid3.ArrayGrid.ColumnHeader">
            <summary>
            Gets or sets the cell used for the column headers.  Only used when FixedRows is greater than 0.
            </summary>
        </member>
        <member name="P:SourceGrid3.ArrayGrid.RowHeader">
            <summary>
            Gets or sets the cell used for the row headers. Only used when FixedColumns is greater than 0.
            </summary>
        </member>
        <member name="P:SourceGrid3.ArrayGrid.Header">
            <summary>
            Gets or sets the cell used for the left top position header. Only used when FixedRows and FixedColumns are greater than 0.
            </summary>
        </member>
        <member name="T:SourceGrid3.ArrayColumnHeader">
            <summary>
            A cell header used for the columns. Usually used in the HeaderCell property of a DataGridColumn.
            </summary>
        </member>
        <member name="T:SourceGrid3.ArrayRowHeader">
            <summary>
            A cell used as left row selector. Usually used in the DataCell property of a DataGridColumn. If FixedColumns is grater than 0 and the columns are automatically created then the first column is created of this type.
            </summary>
        </member>
        <member name="T:SourceGrid3.ArrayHeader">
            <summary>
            A cell used for the top/left cell when using DataGridRowHeader.
            </summary>
        </member>
        <member name="T:SourceGrid3.DataGrid">
            <summary>
            A grid control that support load from a System.Data.DataView class, usually used for data binding.
            </summary>
        </member>
        <member name="M:SourceGrid3.DataGrid.CreateRowsObject">
            <summary>
            Method used to create the rows object, in this class of type DataGridRows.
            </summary>
        </member>
        <member name="M:SourceGrid3.DataGrid.CreateColumnsObject">
            <summary>
            Method used to create the columns object, in this class of type DataGridColumns.
            </summary>
        </member>
        <member name="M:SourceGrid3.DataGrid.GetCell(System.Int32,System.Int32)">
            <summary>
            Gets a specified Cell by its row and column.
            </summary>
            <param name="p_iRow"></param>
            <param name="p_iCol"></param>
            <returns></returns>
        </member>
        <member name="M:SourceGrid3.DataGrid.CreateColumns">
            <summary>
            Automatic create the columns classes based on the specified DataSource.
            </summary>
        </member>
        <member name="M:SourceGrid3.DataGrid.DeleteSelectedRows">
            <summary>
            Delete all the selected rows.
            </summary>
            <returns>Returns true if one or more row is deleted otherwise false.</returns>
        </member>
        <member name="M:SourceGrid3.DataGrid.AutoSize">
            <summary>
            AutoSize the columns based on the visible range and autosize te rows based on the first row. (because there is only one height available)
            </summary>
        </member>
        <member name="M:SourceGrid3.DataGrid.BeginEditRow(System.Int32)">
            <summary>
            Check if the specified row is the active row (focused), return false if it is not the active row. Then call the BeginEdit on the associated DataRowView. Add a row to the DataView if required. Returns true if the method sucesfully call the BeginEdit and set the EditingRow property.
            </summary>
            <param name="gridRow"></param>
            <returns></returns>
        </member>
        <member name="M:SourceGrid3.DataGrid.EndEditingRow(System.Boolean)">
            <summary>
            Calls the CancelEdit or the EndEdit on the editing Row and set to null the editing row.
            </summary>
            <param name="cancel"></param>
        </member>
        <member name="P:SourceGrid3.DataGrid.DataSource">
            <summary>
            Gets or sets the DataView used for data binding.
            </summary>
        </member>
        <member name="P:SourceGrid3.DataGrid.Rows">
            <summary>
            Gets the rows information as a DataGridRows object.
            </summary>
        </member>
        <member name="P:SourceGrid3.DataGrid.Columns">
            <summary>
            Gets the columns informations as a DataGridColumns object.
            </summary>
        </member>
        <member name="P:SourceGrid3.DataGrid.SelectedDataRows">
            <summary>
            Gets or sets the selected DataRowView.
            </summary>
        </member>
        <member name="P:SourceGrid3.DataGrid.DeleteRowsWithDeleteKey">
            <summary>
            Gets or sets if enable the delete of the selected rows when pressing Delete key.
            </summary>
        </member>
        <member name="P:SourceGrid3.DataGrid.CancelEditingWithEscapeKey">
            <summary>
            Gets or sets if enable the Cancel Editing feature when pressing escape key
            </summary>
        </member>
        <member name="P:SourceGrid3.DataGrid.DeleteQuestionMessage">
            <summary>
            Message showed with the DeleteSelectedRows method. Set to null to not show any message.
            </summary>
        </member>
        <member name="P:SourceGrid3.DataGrid.EditingDataRow">
            <summary>
            Gets the currently editing row. Null if no row is in editing.
            </summary>
        </member>
        <member name="P:SourceGrid3.DataGrid.EditingRow">
            <summary>
            Gets the currently editing row. Null if no row is in editing.
            </summary>
        </member>
        <member name="F:SourceGrid3.DataGrid.EditingInfo.mEditingDataRow">
            <summary>
            Nota: Devo uasre la stessa istanza della DataView sia per il BeginEdit che per l'EndEdit, e questa viene ricreata ad ogni chiamata all'indexer della DataView, deve quindi essere mantenuto in memoria quello in editing.
            </summary>
        </member>
        <member name="M:SourceGrid3.DataGridColumns.IndexToDataSourceColumn(System.Int32)">
            <summary>
            Return the DataColumn object for a given grid column index. Return null if not applicable, for example if the column index requested is a FixedColumns of an unbound column
            </summary>
            <param name="gridColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:SourceGrid3.DataGridColumns.DataSourceColumnToIndex(System.Data.DataColumn)">
            <summary>
            Returns the index for a given DataColumn. -1 if not valid.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="T:SourceGrid3.DataGridColumn">
            <summary>
            A ColumnInfo derived class used to store column informations for a DataGrid control. Mantains the cell used on this grid and manage the binding to the DataSource using a DataGridValueModel class.
            </summary>
        </member>
        <member name="M:SourceGrid3.DataGridColumn.#ctor(SourceGrid3.DataGrid)">
            <summary>
            Constructor
            </summary>
            <param name="grid"></param>
        </member>
        <member name="M:SourceGrid3.DataGridColumn.#ctor(SourceGrid3.DataGrid,System.Data.DataColumn,SourceGrid3.Cells.ICellVirtual,SourceGrid3.Cells.ICellVirtual)">
            <summary>
            Constructor. Create a DataGridColumn class.
            </summary>
            <param name="grid"></param>
            <param name="dataColumn">The DataColumn specified for this column. Can be null if not binded to a datasource Column.</param>
            <param name="headerCell"></param>
            <param name="dataCell"></param>
        </member>
        <member name="M:SourceGrid3.DataGridColumn.CreateRowHeader(SourceGrid3.DataGrid)">
            <summary>
            Create a DataGridColumn with special cells used for RowHeader, usually used when FixedColumns is 1 for the first column.
            </summary>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:SourceGrid3.DataGridColumn.Create(SourceGrid3.DataGrid,System.Data.DataColumn,System.Boolean)">
            <summary>
            Create a DataGridColumn class with the appropriate cells based on the type of the column.
            </summary>
            <param name="grid"></param>
            <param name="dataColumn"></param>
            <param name="editable"></param>
            <returns></returns>
        </member>
        <member name="M:SourceGrid3.DataGridColumn.GetDataCell(System.Int32)">
            <summary>
            Gets the ICellVirtual for the current column and the specified row. Override this method to provide custom cells, based on the row informations.
            </summary>
            <param name="gridRow"></param>
            <returns></returns>
        </member>
        <member name="P:SourceGrid3.DataGridColumn.DataColumn">
            <summary>
            Gets or sets the DataColumn specified for this column. Can be null if not binded to a datasource Column.
            This filed is used for example to support sorting.
            </summary>
        </member>
        <member name="T:SourceGrid3.DataGridValueModel">
            <summary>
            A Model of type IValueModel used for binding the value to a specified column of a DataView. Used for the DataGrid control.
            </summary>
        </member>
        <member name="M:SourceGrid3.DataGridValueModel.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="columnIndex">Index of the column relative to the DataView</param>
        </member>
        <member name="T:SourceGrid3.DataGridRows">
            <summary>
            This class implements a RowsSimpleBase class using a DataView bound mode for row count.
            </summary>
        </member>
        <member name="M:SourceGrid3.DataGridRows.IndexToDataSourceIndex(System.Int32)">
            <summary>
            Returns the DataView index for the specified grid row index.
            </summary>
            <param name="gridRowIndex"></param>
            <returns></returns>
        </member>
        <member name="M:SourceGrid3.DataGridRows.IndexToDataSourceRow(System.Int32)">
            <summary>
            Returns the DataRowView object for a given grid row index. Return null if not applicable, for example if the DataSource is null or if the row index requested is a FixedRows
            </summary>
            <param name="gridRowIndex"></param>
            <returns></returns>
        </member>
        <member name="M:SourceGrid3.DataGridRows.DataSourceRowToIndex(System.Data.DataRowView)">
            <summary>
            Returns the index for a given DataRowView. -1 if not valid.
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="P:SourceGrid3.DataGridRows.Count">
            <summary>
            Gets the number of row of the current DataView. Usually this value is automatically calculated and cannot be changed manually.
            </summary>
        </member>
        <member name="T:SourceGrid3.DataGridColumnHeader">
            <summary>
            A cell header used for the columns. Usually used in the HeaderCell property of a DataGridColumn.
            </summary>
        </member>
        <member name="T:SourceGrid3.DataGridRowHeader">
            <summary>
            A cell used as left row selector. Usually used in the DataCell property of a DataGridColumn. If FixedColumns is grater than 0 and the columns are automatically created then the first column is created of this type.
            </summary>
        </member>
        <member name="T:SourceGrid3.DataGridHeader">
            <summary>
            A cell used for the top/left cell when using DataGridRowHeader.
            </summary>
        </member>
        <member name="T:SourceGrid3.ListEditor">
            <summary>
            Summary description for ListEditor.
            </summary>
        </member>
        <member name="F:SourceGrid3.ListEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SourceGrid3.ListEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:SourceGrid3.ListEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SourceGrid3.Planning.PlanningGrid">
            <summary>
            Summary description for PlanningGrid.
            </summary>
        </member>
        <member name="F:SourceGrid3.Planning.PlanningGrid.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SourceGrid3.Planning.PlanningGrid.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:SourceGrid3.Planning.PlanningGrid.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SourceGrid3.Planning.AppointmentCollection">
            <summary>
            A collection of elements of type IAppointment
            </summary>
        </member>
        <member name="M:SourceGrid3.Planning.AppointmentCollection.#ctor">
            <summary>
            Initializes a new empty instance of the AppointmentCollection class.
            </summary>
        </member>
        <member name="M:SourceGrid3.Planning.AppointmentCollection.#ctor(SourceGrid3.Planning.IAppointment[])">
            <summary>
            Initializes a new instance of the AppointmentCollection class, containing elements
            copied from an array.
            </summary>
            <param name="items">
            The array whose elements are to be added to the new AppointmentCollection.
            </param>
        </member>
        <member name="M:SourceGrid3.Planning.AppointmentCollection.#ctor(SourceGrid3.Planning.AppointmentCollection)">
            <summary>
            Initializes a new instance of the AppointmentCollection class, containing elements
            copied from another instance of AppointmentCollection
            </summary>
            <param name="items">
            The AppointmentCollection whose elements are to be added to the new AppointmentCollection.
            </param>
        </member>
        <member name="M:SourceGrid3.Planning.AppointmentCollection.AddRange(SourceGrid3.Planning.IAppointment[])">
            <summary>
            Adds the elements of an array to the end of this AppointmentCollection.
            </summary>
            <param name="items">
            The array whose elements are to be added to the end of this AppointmentCollection.
            </param>
        </member>
        <member name="M:SourceGrid3.Planning.AppointmentCollection.AddRange(SourceGrid3.Planning.AppointmentCollection)">
            <summary>
            Adds the elements of another AppointmentCollection to the end of this AppointmentCollection.
            </summary>
            <param name="items">
            The AppointmentCollection whose elements are to be added to the end of this AppointmentCollection.
            </param>
        </member>
        <member name="M:SourceGrid3.Planning.AppointmentCollection.Add(SourceGrid3.Planning.IAppointment)">
            <summary>
            Adds an instance of type IAppointment to the end of this AppointmentCollection.
            </summary>
            <param name="value">
            The IAppointment to be added to the end of this AppointmentCollection.
            </param>
        </member>
        <member name="M:SourceGrid3.Planning.AppointmentCollection.Contains(SourceGrid3.Planning.IAppointment)">
            <summary>
            Determines whether a specfic IAppointment value is in this AppointmentCollection.
            </summary>
            <param name="value">
            The IAppointment value to locate in this AppointmentCollection.
            </param>
            <returns>
            true if value is found in this AppointmentCollection;
            false otherwise.
            </returns>
        </member>
        <member name="M:SourceGrid3.Planning.AppointmentCollection.IndexOf(SourceGrid3.Planning.IAppointment)">
            <summary>
            Return the zero-based index of the first occurrence of a specific value
            in this AppointmentCollection
            </summary>
            <param name="value">
            The IAppointment value to locate in the AppointmentCollection.
            </param>
            <returns>
            The zero-based index of the first occurrence of the _ELEMENT value if found;
            -1 otherwise.
            </returns>
        </member>
        <member name="M:SourceGrid3.Planning.AppointmentCollection.Insert(System.Int32,SourceGrid3.Planning.IAppointment)">
            <summary>
            Inserts an element into the AppointmentCollection at the specified index
            </summary>
            <param name="index">
            The index at which the IAppointment is to be inserted.
            </param>
            <param name="value">
            The IAppointment to insert.
            </param>
        </member>
        <member name="M:SourceGrid3.Planning.AppointmentCollection.Remove(SourceGrid3.Planning.IAppointment)">
            <summary>
            Removes the first occurrence of a specific IAppointment from this AppointmentCollection.
            </summary>
            <param name="value">
            The IAppointment value to remove from this AppointmentCollection.
            </param>
        </member>
        <member name="M:SourceGrid3.Planning.AppointmentCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the elements of this AppointmentCollection.
            </summary>
            <returns>
            An object that implements System.Collections.IEnumerator.
            </returns>        
        </member>
        <member name="P:SourceGrid3.Planning.AppointmentCollection.Item(System.Int32)">
            <summary>
            Gets or sets the IAppointment at the given index in this AppointmentCollection.
            </summary>
        </member>
        <member name="T:SourceGrid3.Planning.AppointmentCollection.Enumerator">
            <summary>
            Type-specific enumeration class, used by AppointmentCollection.GetEnumerator.
            </summary>
        </member>
    </members>
</doc>
